{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anuda/Desktop/CS%20research%20web/cs-research/front/my-app/src/app/%28police%29/History/page.js"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Head from 'next/head';\r\n\r\nexport default function HistoryView() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [historyData, setHistoryData] = useState([]);\r\n  const [selectedMonth, setSelectedMonth] = useState(0); // 0 for All Months\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [loggedInCity, setLoggedInCity] = useState('');\r\n\r\n  // Fetch history data\r\n  const fetchHistory = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const city = localStorage.getItem('loggedInCity');\r\n      if (!city) {\r\n        setError('No city selected. Please log in again.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      setLoggedInCity(city);\r\n\r\n      const params = { city };\r\n      if (selectedMonth !== 0) {\r\n        params.month = selectedMonth;\r\n      }\r\n      if (selectedYear) {\r\n        params.year = selectedYear;\r\n      }\r\n\r\n      const response = await axios.get('http://localhost:3080/history', { params });\r\n      setHistoryData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching history data:', error);\r\n      setError(error.response?.data?.error || error.message);\r\n      setHistoryData([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n  }, [selectedMonth, selectedYear]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center py-8\">\r\n      <Head>\r\n        <title>History View - Police Dashboard</title>\r\n        <script src=\"https://cdn.tailwindcss.com\"></script>\r\n      </Head>\r\n      <div className=\"w-full max-w-7xl px-4 sm:px-6 lg:px-8\">\r\n        {/* Header */}\r\n        <div className=\"bg-white shadow-lg rounded-lg p-6 mb-8 border border-black\">\r\n          <h1 className=\"text-3xl font-bold text-black text-center\">History View - Police Dashboard</h1>\r\n          <p className=\"text-black text-center mt-2\">Violation and Check History for {loggedInCity}.</p>\r\n        </div>\r\n\r\n        {/* Loading and Error States */}\r\n        {loading && (\r\n          <div className=\"bg-white shadow-lg rounded-lg p-6 w-full text-center border border-black\">\r\n            <p className=\"text-black text-lg\">Loading history...</p>\r\n          </div>\r\n        )}\r\n        {error && (\r\n          <div className=\"bg-white shadow-lg rounded-lg p-6 w-full text-center border border-black\">\r\n            <p className=\"text-red-600 text-lg\">Error: {error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Content */}\r\n        {!loading && !error && (\r\n          <div className=\"space-y-8\">\r\n            {/* Month and Year Selection */}\r\n            <div className=\"bg-white shadow-lg rounded-lg p-6 flex flex-col sm:flex-row items-center justify-center gap-4 border border-black\">\r\n              <div className=\"flex items-center gap-3 w-full sm:w-auto\">\r\n                <label htmlFor=\"monthSelect\" className=\"text-black font-medium text-sm sm:text-base\">\r\n                  Select Month:\r\n                </label>\r\n                <select\r\n                  id=\"monthSelect\"\r\n                  value={selectedMonth}\r\n                  onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n                  className=\"w-full sm:w-auto p-2.5 border border-black rounded-lg text-black text-sm sm:text-base focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200\"\r\n                >\r\n                  <option value={0}>All Months</option>\r\n                  {Array.from({ length: 12 }, (_, i) => (\r\n                    <option key={i + 1} value={i + 1}>\r\n                      {new Date(0, i).toLocaleString('default', { month: 'long' })}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <label htmlFor=\"yearSelect\" className=\"text-black font-medium text-sm sm:text-base\">\r\n                  Select Year:\r\n                </label>\r\n                <input\r\n                  id=\"yearSelect\"\r\n                  type=\"number\"\r\n                  value={selectedYear}\r\n                  onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n                  className=\"w-full sm:w-auto p-2.5 border border-black rounded-lg text-black text-sm sm:text-base focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200\"\r\n                  min=\"2000\"\r\n                  max=\"2100\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* History List */}\r\n            <div className=\"bg-white shadow-lg rounded-lg p-6 border border-black\">\r\n              <h2 className=\"text-xl font-semibold text-black mb-4\">Violation and Check History</h2>\r\n              {historyData.length === 0 ? (\r\n                <p className=\"text-black text-center\">No records found.</p>\r\n              ) : (\r\n                <div className=\"space-y-4\">\r\n                  {historyData.map((entry) => (\r\n                    <div\r\n                      key={entry.id}\r\n                      className=\"flex flex-col sm:flex-row items-start sm:items-center gap-4 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition\"\r\n                    >\r\n                      {/* Image */}\r\n                      {entry.photoPath ? (\r\n                        <div className=\"w-full sm:w-48 h-48 relative\">\r\n                          <img\r\n                            src={entry.photoPath} // Use the full URL directly from the backend\r\n                            alt={`Violation or Check Photo for ${entry.id}`}\r\n                            className=\"w-full h-full object-cover rounded-lg\"\r\n                            onError={(e) => {\r\n                              console.log('Error loading image:', entry.photoPath);\r\n                              e.target.style.display = 'none';\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"w-full sm:w-48 h-48 flex items-center justify-center bg-gray-200 rounded-lg\">\r\n                          <span className=\"text-gray-500\">No Image</span>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Details */}\r\n                      <div className=\"flex-1\">\r\n                        <p className=\"text-black font-medium\">\r\n                          Violation: {entry.violationType !== 'None' ? entry.violationType : 'N/A'}\r\n                        </p>\r\n                        <p className=\"text-black font-medium\">\r\n                          Item Found: {entry.issueType !== 'No Issues' ? entry.issueType : 'N/A'}\r\n                        </p>\r\n                        <p className=\"text-gray-600\">\r\n                          Date: {new Date(entry.date).toLocaleString('default', {\r\n                            year: 'numeric',\r\n                            month: 'long',\r\n                            day: 'numeric',\r\n                            hour: '2-digit',\r\n                            minute: '2-digit',\r\n                          })}\r\n                        </p>\r\n                        <p className=\"text-gray-600\">Policeman: {entry.policemanName}</p>\r\n                        <p className=\"text-gray-600\">City: {entry.city}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACjD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,mBAAmB;IAC1E,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,OAAO,WAAW;IACvE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,qBAAqB;IACrB,MAAM,eAAe;QACnB,WAAW;QACX,IAAI;YACF,MAAM,OAAO,aAAa,OAAO,CAAC;YAClC,IAAI,CAAC,MAAM;gBACT,SAAS;gBACT,WAAW;gBACX;YACF;YACA,gBAAgB;YAEhB,MAAM,SAAS;gBAAE;YAAK;YACtB,IAAI,kBAAkB,GAAG;gBACvB,OAAO,KAAK,GAAG;YACjB;YACA,IAAI,cAAc;gBAChB,OAAO,IAAI,GAAG;YAChB;YAEA,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,iCAAiC;gBAAE;YAAO;YAC3E,eAAe,SAAS,IAAI;QAC9B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,SAAS,MAAM,QAAQ,EAAE,MAAM,SAAS,MAAM,OAAO;YACrD,eAAe,EAAE;QACnB,SAAU;YACR,WAAW;QACb;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR;QACF;gCAAG;QAAC;QAAe;KAAa;IAEhC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,uKAAA,CAAA,UAAI;;kCACH,6LAAC;kCAAM;;;;;;kCACP,6LAAC;wBAAO,KAAI;;;;;;;;;;;;0BAEd,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAA4C;;;;;;0CAC1D,6LAAC;gCAAE,WAAU;;oCAA8B;oCAAiC;oCAAa;;;;;;;;;;;;;oBAI1F,yBACC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;oBAGrC,uBACC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAE,WAAU;;gCAAuB;gCAAQ;;;;;;;;;;;;oBAK/C,CAAC,WAAW,CAAC,uBACZ,6LAAC;wBAAI,WAAU;;0CAEb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAM,SAAQ;4CAAc,WAAU;sDAA8C;;;;;;sDAGrF,6LAAC;4CACC,IAAG;4CACH,OAAO;4CACP,UAAU,CAAC,IAAM,iBAAiB,SAAS,EAAE,MAAM,CAAC,KAAK;4CACzD,WAAU;;8DAEV,6LAAC;oDAAO,OAAO;8DAAG;;;;;;gDACjB,MAAM,IAAI,CAAC;oDAAE,QAAQ;gDAAG,GAAG,CAAC,GAAG,kBAC9B,6LAAC;wDAAmB,OAAO,IAAI;kEAC5B,IAAI,KAAK,GAAG,GAAG,cAAc,CAAC,WAAW;4DAAE,OAAO;wDAAO;uDAD/C,IAAI;;;;;;;;;;;sDAKrB,6LAAC;4CAAM,SAAQ;4CAAa,WAAU;sDAA8C;;;;;;sDAGpF,6LAAC;4CACC,IAAG;4CACH,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,gBAAgB,SAAS,EAAE,MAAM,CAAC,KAAK;4CACxD,WAAU;4CACV,KAAI;4CACJ,KAAI;;;;;;;;;;;;;;;;;0CAMV,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAwC;;;;;;oCACrD,YAAY,MAAM,KAAK,kBACtB,6LAAC;wCAAE,WAAU;kDAAyB;;;;;6DAEtC,6LAAC;wCAAI,WAAU;kDACZ,YAAY,GAAG,CAAC,CAAC,sBAChB,6LAAC;gDAEC,WAAU;;oDAGT,MAAM,SAAS,iBACd,6LAAC;wDAAI,WAAU;kEACb,cAAA,6LAAC;4DACC,KAAK,MAAM,SAAS;4DACpB,KAAK,CAAC,6BAA6B,EAAE,MAAM,EAAE,EAAE;4DAC/C,WAAU;4DACV,SAAS,CAAC;gEACR,QAAQ,GAAG,CAAC,wBAAwB,MAAM,SAAS;gEACnD,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG;4DAC3B;;;;;;;;;;6EAIJ,6LAAC;wDAAI,WAAU;kEACb,cAAA,6LAAC;4DAAK,WAAU;sEAAgB;;;;;;;;;;;kEAKpC,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAE,WAAU;;oEAAyB;oEACxB,MAAM,aAAa,KAAK,SAAS,MAAM,aAAa,GAAG;;;;;;;0EAErE,6LAAC;gEAAE,WAAU;;oEAAyB;oEACvB,MAAM,SAAS,KAAK,cAAc,MAAM,SAAS,GAAG;;;;;;;0EAEnE,6LAAC;gEAAE,WAAU;;oEAAgB;oEACpB,IAAI,KAAK,MAAM,IAAI,EAAE,cAAc,CAAC,WAAW;wEACpD,MAAM;wEACN,OAAO;wEACP,KAAK;wEACL,MAAM;wEACN,QAAQ;oEACV;;;;;;;0EAEF,6LAAC;gEAAE,WAAU;;oEAAgB;oEAAY,MAAM,aAAa;;;;;;;0EAC5D,6LAAC;gEAAE,WAAU;;oEAAgB;oEAAO,MAAM,IAAI;;;;;;;;;;;;;;+CAxC3C,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDnC;GAtKwB;KAAA","debugId":null}}]
}