{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anuda/Desktop/CS%20research%20web/cs-research/front/my-app/src/app/%28police%29/Phome/page.js"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function Dashboard() {\r\n  const [checkpoints, setCheckpoints] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchCheckpoints = async () => {\r\n    try {\r\n      const loggedInCity = localStorage.getItem('loggedInCity');\r\n      if (!loggedInCity) {\r\n        setError('No city selected. Please log in again.');\r\n        return;\r\n      }\r\n      const response = await axios.get('http://localhost:3080/checkpoints', {\r\n        params: { city: loggedInCity },\r\n      });\r\n      setCheckpoints(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching checkpoints:', error);\r\n      setError('Failed to fetch checkpoint data');\r\n    }\r\n  };\r\n\r\n  const fetchAttendanceData = async () => {\r\n    try {\r\n      const loggedInCity = localStorage.getItem('loggedInCity');\r\n      if (!loggedInCity) {\r\n        setError('No city selected. Please log in again.');\r\n        return;\r\n      }\r\n\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      const tomorrow = new Date(today);\r\n      tomorrow.setDate(today.getDate() + 1);\r\n\r\n      const pdetailsResponse = await axios.get('http://localhost:3080/attendance-records', {\r\n        params: { city: loggedInCity },\r\n      });\r\n      const pdetails = pdetailsResponse.data;\r\n\r\n      const attenResponse = await axios.get('http://localhost:3080/attendance-today', {\r\n        params: {\r\n          start: today.toISOString(),\r\n          end: tomorrow.toISOString(),\r\n          city: loggedInCity,\r\n        },\r\n      });\r\n      const attenRecords = attenResponse.data;\r\n\r\n      const presentPolicemen = attenRecords\r\n        .filter(record => record.Attendace)\r\n        .map(record => {\r\n          const pdetail = pdetails.find(p => p.ID === record.ID);\r\n          return {\r\n            ...record,\r\n            name: pdetail ? pdetail.name : 'Unknown',\r\n          };\r\n        });\r\n\r\n      setAttendanceData(presentPolicemen);\r\n    } catch (error) {\r\n      console.error('Error fetching attendance data:', error);\r\n      setError('Failed to fetch attendance data');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      await Promise.all([fetchCheckpoints(), fetchAttendanceData()]);\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Calculate summary metrics\r\n  const totalUploads = checkpoints.length;\r\n  const actionTakenCount = checkpoints.filter(checkpoint => checkpoint.actionTaken === 'Action Taken').length;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 p-6 flex flex-col gap-6\">\r\n      {/* Main Container */}\r\n      <div className=\"flex flex-col lg:flex-row gap-6\">\r\n        {/* Left Section: Today */}\r\n        <div className=\"lg:w-2/3 bg-white rounded-xl shadow-lg p-6 transition-all duration-300 hover:shadow-xl\">\r\n          <div className=\"flex items-center gap-2 mb-4\">\r\n            <svg className=\"w-6 h-6 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\r\n            </svg>\r\n            <h2 className=\"text-2xl font-bold text-gray-800\">Today's Checkpoints</h2>\r\n          </div>\r\n          <div className=\"h-[32rem] overflow-y-auto pr-2\">\r\n            {loading ? (\r\n              <div className=\"flex justify-center items-center h-full\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-600\"></div>\r\n              </div>\r\n            ) : error ? (\r\n              <p className=\"text-red-500 bg-red-50 p-4 rounded-lg\">{error}</p>\r\n            ) : checkpoints.length > 0 ? (\r\n              checkpoints.map((checkpoint, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"mb-4 p-4 bg-gray-50 rounded-lg border border-gray-200 hover:bg-gray-100 transition-colors duration-200\"\r\n                >\r\n                  <p className=\"text-gray-800\">\r\n                    <span className=\"font-semibold\">Vehicle:</span> {checkpoint.vehicleNumber}\r\n                  </p>\r\n                  <p className=\"text-gray-600\">\r\n                    <span className=\"font-semibold\">City:</span> {checkpoint.city}\r\n                  </p>\r\n                  <p className=\"text-gray-600\">\r\n                    <span className=\"font-semibold\">Time:</span> {new Date(checkpoint.createdAt).toLocaleTimeString()}\r\n                  </p>\r\n                  <p className=\"text-gray-600\">\r\n                    <span className=\"font-semibold\">Status:</span>{' '}\r\n                    <span\r\n                      className={`inline-block px-2 py-1 rounded-full text-xs font-medium ${\r\n                        checkpoint.actionTaken === 'Action Taken'\r\n                          ? 'bg-green-100 text-green-800'\r\n                          : 'bg-yellow-100 text-yellow-800'\r\n                      }`}\r\n                    >\r\n                      {checkpoint.actionTaken || 'Pending'}\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-gray-600 italic\">No checkpoints submitted today</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Section: Past Actions and Trackings */}\r\n        <div className=\"lg:w-1/3 flex flex-col gap-6\">\r\n          {/* Today Past Actions */}\r\n          <div className=\"bg-white rounded-xl shadow-lg p-6 transition-all duration-300 hover:shadow-xl\">\r\n            <div className=\"flex items-center gap-2 mb-4\">\r\n              <svg className=\"w-6 h-6 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n              </svg>\r\n              <h2 className=\"text-2xl font-bold text-gray-800\">Past Actions</h2>\r\n            </div>\r\n            <div className=\"h-48 overflow-y-auto pr-2\">\r\n              {loading ? (\r\n                <div className=\"flex justify-center items-center h-full\">\r\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-600\"></div>\r\n                </div>\r\n              ) : checkpoints.length > 0 ? (\r\n                checkpoints\r\n                  .filter(checkpoint => checkpoint.actionTaken === 'Action Taken')\r\n                  .map((checkpoint, index) => (\r\n                    <p\r\n                      key={index}\r\n                      className=\"mb-2 text-gray-700 hover:text-indigo-600 transition-colors duration-200\"\r\n                    >\r\n                      {checkpoint.vehicleNumber} - {checkpoint.city}\r\n                    </p>\r\n                  ))\r\n              ) : (\r\n                <p className=\"text-gray-600 italic\">No past actions today</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Trackings */}\r\n          <div className=\"bg-white rounded-xl shadow-lg p-6 transition-all duration-300 hover:shadow-xl\">\r\n            <div className=\"flex items-center gap-2 mb-4\">\r\n              <svg className=\"w-6 h-6 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\r\n              </svg>\r\n              <h2 className=\"text-2xl font-bold text-gray-800\">Trackings</h2>\r\n            </div>\r\n            <div className=\"h-48 overflow-y-auto pr-2\">\r\n              {loading ? (\r\n                <div className=\"flex justify-center items-center h-full\">\r\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-600\"></div>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  {/* Summary Section */}\r\n                  <div className=\"mb-4 p-4 bg-indigo-50 rounded-lg\">\r\n                    <p className=\"text-gray-800 font-semibold\">\r\n                      Total Uploads Today:{' '}\r\n                      <span className=\"text-indigo-600\">{totalUploads}</span>\r\n                    </p>\r\n                    <p className=\"text-gray-800 font-semibold\">\r\n                      Action Taken:{' '}\r\n                      <span className=\"text-indigo-600\">{actionTakenCount}</span>\r\n                    </p>\r\n                  </div>\r\n                  {/* Present Policemen List */}\r\n                  {attendanceData.length > 0 ? (\r\n                    attendanceData.map((record, index) => (\r\n                      <p\r\n                        key={index}\r\n                        className=\"mb-2 text-gray-700 hover:text-indigo-600 transition-colors duration-200\"\r\n                      >\r\n                        {record.name} - {record.city}\r\n                      </p>\r\n                    ))\r\n                  ) : (\r\n                    <p className=\"text-gray-600 italic\">No policemen marked present today</p>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}